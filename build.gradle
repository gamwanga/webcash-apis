plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
}

apply plugin: 'war'

group = 'com.micropay'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot', version: '3.0.3'
	implementation "io.springfox:springfox-boot-starter:3.0.0"
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
}

test {
	useJUnitPlatform()
}


task copyToLib(type: Copy) {
	into "$buildDir/libs/lib"
	from configurations.runtimeClasspath
}

task uberJar(type: War) {
	archiveClassifier = 'uber'

	dependsOn copyToLib
	from sourceSets.main.output.classesDirs, sourceSets.main.output.resourcesDir

	manifest {
		def manifestClasspath = configurations.runtimeClasspath.collect { "lib/" + it.getName() }.join(' ')
		attributes(
				'Class-Path': manifestClasspath,
				'Main-Class': 'io.nightfury.bridge.WSBridge',
				'Created-By': 'Gradle Build (Neptune Software Group)',
				"Implementation-Title": project.name,
				"Implementation-Version": project.version,
				"X-COMMENT": "WSBridge OrbitR API"
		)
	}

	baseName 'WSBridge'
}